name: "tagged-release"

on:
  push:
    tags:
      - 'v*'
      - '!*-rc*'

jobs:
  ubunut20:
    name: "ubuntu compile and test"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2                
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  windows-static-msvc:
    name: "windows static msvc compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v4
        with:
            python-version: '3.10' 
      - name: install meson
        run: pip install meson
      - name: meson setup
        run: meson setup -Ddefault_library=static -Db_lto=false -Dgtest:b_lto=false build
      - name: meson generate
        run: meson compile generate -C build
      - name: meson compile
        run: meson compile -C build
      - name: meson test
        run: meson test -C build
      - name: clearing build directory
        run: Remove-Item -recurse -force build

  windows-shared-msvc:
    name: "windows shared msvc compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v4
        with:
            python-version: '3.10' 
      - name: install meson
        run: pip install meson
      - name: meson setup
        run: meson setup -Ddefault_library=shared -Db_lto=false -Dgtest:b_lto=false build
      - name: meson generate
        run: meson compile generate -C build
      - name: meson compile
        run: meson compile -C build
      - name: meson test
        run: meson test -C build
      - name: clearing build directory
        run: Remove-Item -recurse -force build

  windows-static-msys2:
    name: "windows static msys2 compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-python-pip
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkg-config
      - name: install pip deps
        shell: msys2 {0}
        run: pip install -r requirements.txt
      - name: meson setup
        shell: msys2 {0}
        run: meson setup -Ddefault_library=static -Db_lto=false -Dno_pip_install=true -Dgtest:b_lto=false build
      - name: meson generate
        shell: msys2 {0}
        run: meson compile generate -C build
      - name: meson compile
        shell: msys2 {0}
        run: meson compile -C build
      - name: meson test
        shell: msys2 {0}
        run: meson test -C build
      - name: clearing build directory
        run: Remove-Item -recurse -force build

  windows-shared-msys2:
    name: "windows shared msys2 compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-python3
            mingw-w64-x86_64-python-pip
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-pkg-config
      - name: install pip deps
        shell: msys2 {0}
        run: pip install -r requirements.txt
      - name: meson setup
        shell: msys2 {0}
        run: meson setup -Ddefault_library=shared -Db_lto=false -Dno_pip_install=true -Dgtest:b_lto=false build
      - name: meson generate
        shell: msys2 {0}
        run: meson compile generate -C build
      - name: meson compile
        shell: msys2 {0}
        run: meson compile -C build
      - name: meson test
        shell: msys2 {0}
        run: meson test -C build
      - name: clearing build directory
        run: Remove-Item -recurse -force build
        
  macos:
    name: "mac os compile and test"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2                
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  tagged-rc-release:
    name: "Release candidate"
    runs-on: "ubuntu-20.04"
    needs: [windows-shared-msys2, windows-static-msys2, windows-static-msvc, windows-shared-msvc, ubunut20, macos]
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: sudo apt install doxygen graphviz
      - name: generate docs
        run: doxygen
      - name: Deploy docs
        uses: s0/git-publish-subdir-action@master
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: doc/html
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
            
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.compiler }}
          path: .
