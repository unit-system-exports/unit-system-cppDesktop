name: "stable-release"

on:
  push:
    branches:
      - 'stable'

jobs:
  ubunut20:
    name: "ubuntu compile and test"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2                
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  windows-static-msvc:
    name: "windows compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2          
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
          setup-options: -Ddefault_library=static -Db_lto=false
      - name: clearing build directory
        run: Remove-Item -recurse -force build

  windows-shared-msvc:
    name: "windows compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2          
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
          setup-options: -Ddefault_library=shared -Db_lto=false
      - name: clearing build directory
        run: Remove-Item -recurse -force build
        
  macos:
    name: "mac os compile and test"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2                
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  stable-release:
    name: "Release candidate"
    runs-on: "ubuntu-20.04"
    needs: [windows, ubunut20, macos]
    steps:
      - uses: actions/checkout@v3
      
      - name: copy files into arduino ports
        run: |
          mkdir unit-system-adruino
          mkdir unit-system-adruino/src
          mkdir unit-system-adruino/src/sources
          cp    library.properties  unit-system-adruino/
          cp    LICENSE             unit-system-adruino/
          cp    README.md           unit-system-adruino/
          cp -r Arduino-extras/.    unit-system-adruino/
          cp    generic/include/*   unit-system-adruino/src/
          cp    base/include/*      unit-system-adruino/src/
          cp    base/src/*          unit-system-adruino/src/sources/
          cp    common/include/*    unit-system-adruino/src/
          cp    common/src/*        unit-system-adruino/src/sources/
      - name: commit and push changes to arduino port
        uses: s0/git-publish-subdir-action@master
        env:
          REPO: git@github.com:noah1510/unit-system-adruino.git
          BRANCH: main
          FOLDER: unit-system-adruino
          SSH_PRIVATE_KEY: ${{ secrets.ARDUINO_DEPLOY_KEY }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "stable"
          prerelease: false
          title: "stable Build"
          files: |
            LICENSE
            
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.compiler }}
          path: .
