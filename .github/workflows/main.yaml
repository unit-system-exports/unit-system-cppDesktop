name: "main-ci"

on:
  push:
    branches:
      - 'main'

jobs:
  doxygen:
    runs-on: ubuntu-20.04
    if: "contains(github.event.head_commit.message, '--build-docs')"
    steps:
    - uses: actions/checkout@v3
    - name: install dependencies
      run: sudo apt install doxygen graphviz
    - name: generate docs
      run: doxygen
    - name: Deploy
      uses: s0/git-publish-subdir-action@master
      env:
        REPO: self
        BRANCH: gh-pages
        FOLDER: doc/html
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ubunut20:
    name: "ubuntu compile and test"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2          
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  windows-static-msvc:
    name: "windows static msvc compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2          
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
          setup-options: -Ddefault_library=static -Db_lto=false -Dgtest:b_lto=false
      - name: clearing build directory
        run: Remove-Item -recurse -force build

  windows-shared-msvc:
    name: "windows shared msvc compile and test"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2          
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
          setup-options: -Ddefault_library=shared -Db_lto=false -Dgtest:b_lto=false
      - name: clearing build directory
        run: Remove-Item -recurse -force build
        
  macos:
    name: "mac os compile and test"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2                
      - uses: BSFishy/meson-build@v1.0.3
        name: build full
        with:
          action: test
          directory: build
          options: --verbose
          meson-version: 0.61.3
      - name: clearing build directory
        run: rm -rf build

  pre-release:
    name: "Pre Release latest"
    runs-on: "ubuntu-20.04"
    needs: [windows-shared-msvc, windows-static-msvc, ubunut20, macos]
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE
            
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: build-artifact-${{ matrix.os }}-${{ matrix.compiler }}
          path: .

