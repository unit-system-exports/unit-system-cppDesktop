#!/bin/bash

function getDefName () {
    echo "windows-extras/$1/unit-system-$1-0.def"
}

usedSymbols=()
function isSymbolUsed () {
    sym=$1
    for lSym in "${usedSymbols[@]}"
    do
        if [[ $sym == $lSym ]]; then
            return 1;
        fi
    done

    return 0;
}

soFiles=("base" "common")
exportFolder="windows-extras"

echo -e "cleaning up old dir"
rm -rf $exportFolder
mkdir $exportFolder

for (( j=0 ; j < ${#soFiles[*]} ; j++ ));
do
    file="${soFiles[j]}"
    defFile=$(getDefName $file)

    echo -e "create new export folder for $file"
    mkdir $exportFolder/$file
    
    echo -e "getting symbol map for build/$file/libunit-system-$file-0.dll"
    
    echo -e "; Auto-generated by symbol Table Script\nLIBRARY unit-system-$file-0\nEXPORTS" > $defFile
    symbols=($(cat build/$file/unit-system-$file-0.map | awk '{print $2}' | grep sakurajin | grep -v -e unwind -e FrameData -e rtcName -e rtcVarDesc -e " " | grep "\S"))

    echo -e "found ${#symbols[*]} symbols"
    ordinalOffset=1

    for (( i=0 ; i < ${#symbols[*]} ; i++ ));
    do
        sym=${symbols[i]}
        isSymbolUsed $sym

        if [[ $? -eq 1 || $sym =~ ^\ +$ ]]; then
            ((ordinalOffset--))
        else
            usedSymbols+=("$sym")
            echo "$sym @$((i+ordinalOffset))" >> $defFile
        fi
    done
    echo -e "added $((${#symbols[*]}+ordinalOffset-1)) symbols"
done
